% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_fleet.R
\name{add_fleet}
\alias{add_fleet}
\title{Add a catch-per-unit-effort fleet}
\usage{
add_fleet(
  datlist,
  ctllist,
  data,
  fleetname,
  fleettype = c("CPUE", "catch"),
  units = 0,
  minageselected = 0,
  maxageselected = 0
)
}
\arguments{
\item{datlist}{A list created by \code{\link[r4ss:SS_readdat]{r4ss::SS_readdat()}}.}

\item{ctllist}{A list created by \code{\link[r4ss:SS_readctl]{r4ss::SS_readctl()}}.}

\item{data}{A matrix or data frame with the following data:
\itemize{
\item years,
\item season,
\item catch or catch-per-unit-effort data, and
\item uncertainty about the data.
The matrix will be referenced only by its column number,
not by column name, so order matters but column names do not.
All values in the matrix are numeric.
Currently, you can only provide catch \strong{or} catch-per-unit-effort data.
If you want both, add a fleet for one type and then augment
\code{CPUE} or \code{catch} in the returned list. Be careful with this though because
you might also have to change the type of fleet in \code{fleetinfo} of
the returned list. See fleettype.
}}

\item{fleetname}{A character string supplying the name for the new fleet.}

\item{fleettype}{A character value that corresponds to the name in \code{datlist}
for the object of interest.
The default is to include the information as a survey, i.e., \code{"CPUE"},
rather than as a fishery, i.e., \code{"catch"}.}

\item{units}{An integer supplying the units type.}

\item{minageselected}{The minimum age that is fully selected by the fleet.
The default is age-0 fish and the entry should always be an integer.
This parameter will be used for age-based selectivity type 11.}

\item{maxageselected}{The maximum age that is fully selected by the fleet.
The default is age-0 fish and the entry should always be an integer.
This parameter will be used for age-based selectivity type 11.}
}
\value{
An invisible list of lists is returned with the following two items:
\itemize{
\item datlist and
\item ctllist.
}
}
\description{
Add a fleet that includes catch-per-unit-effort (CPUE) data
to input files for a Stock Synthesis model.
}
\section{HARD-CODED}{
Search for the term \code{HARD-CODED} to find variables that are
defined in the code rather than available as input arguments.
For example, the timing of a survey is hard coded to 1.
Future development could specify these variables using
input arguments or
calculations.
}

\examples{
\dontrun{
# Read in files
dat <- r4ss::SS_readdat(
  file = system.file(
    "extdata", "models", "PacificHake", "hake_data.ss",
    package = "ss3roms"
  ),
  verbose = FALSE
)
ctl <- r4ss::SS_readctl(
  file = system.file(
    "extdata", "models", "PacificHake", "hake_control.ss",
    package = "ss3roms"
  ),
  use_datlist = TRUE,
  datlist = dat,
  verbose = FALSE
)
data(ROMS)
newlists <- add_fleet(
   datlist = dat,
   ctllist = ctl,
   data = data.frame(
     year = ROMS[["year"]],
     seas = 7,
     obs = ROMS[["UWpre.a"]],
     se_log = 0.01
   ),
   fleetname = "Age0_upwelling",
   fleettype = "CPUE",
 )
 fs::dir_copy(
   path = system.file("extdata", "models", "PacificHake",
     package = "ss3roms"
   ),
   new_path = file.path("test"),
   overwrite = TRUE
 )
 r4ss::SS_writectl(
   ctllist = newlists[["ctllist"]],
   outfile = file.path(
     "test",
     basename(newlists[["ctllist"]][["sourcefile"]])
   ),
   overwrite = TRUE,
   verbose = FALSE
 )
 r4ss::SS_writedat(
   datlist = newlists[["datlist"]],
   outfile = file.path(
     "test",
     basename(newlists[["datlist"]][["sourcefile"]])
   ),
   overwrite = TRUE,
   verbose = FALSE
 )
}
}
\seealso{
\itemize{
\item \code{\link[r4ss:SS_writectl]{r4ss::SS_writectl()}}
\item \code{\link[r4ss:SS_writedat]{r4ss::SS_writedat()}}
}
}
\author{
Kelli F. Johnson
}
